# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

testdata = [
  ("tomsmith", "SuperSecretPassword!", "You logged into a secure area!"),
  ("tomsmit", "SuperSecretPassword!", "Your username is invalid!"),
  ("tomsmith", "SuperSecretPassword", "Your password is invalid!"),
]

class TestLogin():
  def setup_method(self, method):
    self.driver = webdriver.Chrome(executable_path=r"C:\\WebDriver\\chromedriver.exe")
    self.vars = {}

  def enterUsername(self, username):
    self.driver.find_element(By.ID, "username").send_keys(username)

  def enterPassword(self, password):
    self.driver.find_element(By.ID, "password").send_keys(password)

  def selectLogin(self):
    self.driver.find_element(By.CLASS_NAME, "radius").click()

  def teardown_method(self, method):
    self.driver.quit()

  def readFlashAlert(self):
    return self.driver.find_element(By.ID, "flash").text


  @pytest.mark.parametrize("username, password, expected", testdata)
  def test_login(self, username, password, expected):
    self.driver.get("https://the-internet.herokuapp.com/login")
    self.enterUsername(username)
    self.enterPassword(password)
    self.selectLogin()
    assert(self.readFlashAlert().__contains__(expected))

    
    
    
